<?php

namespace ziya\Translate\behaviours;


use Yii;
use yii\base\Behavior;
use yii\base\Component;
use yii\base\Model;
use yii\db\ActiveRecord;
use yii\db\BaseActiveRecord;
use yii\validators\BooleanValidator;
use yii\validators\NumberValidator;
use yii\validators\StringValidator;

class TranslatableBehaviour extends Behavior
{
    public $attributes;

    public function events()
    {
        $events = [];

        $events[Model::EVENT_AFTER_VALIDATE] = 'translatableAttribute';
        $events[Model::EVENT_BEFORE_VALIDATE] = 'translatableAttribute';
        $events[BaseActiveRecord::EVENT_AFTER_VALIDATE] = 'translatableAttribute';
        $events[BaseActiveRecord::EVENT_AFTER_FIND] = 'afterFind';
        $events[BaseActiveRecord::EVENT_INIT] = 'afterFind';

        return $events;
    }

    public function attach($owner)
    {
        parent::attach($owner); // TODO: Change the autogenerated stub
        $this->translatableAttribute();
    }

    public function afterFind()
    {
        foreach ($this->attributes as $attribute) {
            $this->owner->$attribute = new Translated($this->owner, $attribute);
        }
    }

    public function translatableAttribute()
    {
        /**@var $this ->>owner Model * */
        if ($this->owner instanceof Model) {
            if ($this->owner->hasErrors()) {
                foreach ($this->attributes as $attribute) {
                    $this->owner->$attribute = new Translated($this->owner, $attribute);
                }
            } else {
                foreach ($this->attributes as $attribute) {
                    $this->owner->$attribute = new Translated($this->owner, $attribute);
                }
            }
        }
    }
}